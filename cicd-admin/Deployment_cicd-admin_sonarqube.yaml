apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    app: sonarqube
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: sonarqube
    app.kubernetes.io/name: sonarqube
    app.kubernetes.io/part-of: sonarqube
  name: sonarqube
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: sonarqube
      name: sonarqube
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: sonarqube
        name: sonarqube
    spec:
      containers:
      - image: docker.io/sonarqube:8-community
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 45
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: sonarqube
        ports:
        - containerPort: 9000
          protocol: TCP
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: /
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "1"
            memory: 4Gi
          requests:
            cpu: 200m
            memory: 512Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/sq/temp
          name: sonarqube-temp
        - mountPath: /opt/sq/conf
          name: sonarqube-conf
        - mountPath: /opt/sq/data
          name: sonarqube-data
        - mountPath: /opt/sq/extensions
          name: sonarqube-extensions
        - mountPath: /opt/sq/logs
          name: sonarqube-logs
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: sonarqube-temp
      - emptyDir: {}
        name: sonarqube-conf
      - emptyDir: {}
        name: sonarqube-logs
      - name: sonarqube-data
        persistentVolumeClaim:
          claimName: sonarqube-data
      - name: sonarqube-extensions
        persistentVolumeClaim:
          claimName: sonarqube-extensions
